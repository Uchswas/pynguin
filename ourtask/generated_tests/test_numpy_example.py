# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import numpy_example as module_0
import platform as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.dataframe_operations(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    module_0.dataframe_operations(tuple_0, threshold=tuple_0, column=tuple_0)


def test_case_2():
    none_type_0 = None
    var_0 = module_0.dataframe_operations(
        none_type_0, none_type_0, none_type_0, none_type_0
    )


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    var_0 = module_0.dataframe_operations(none_type_0, none_type_0, none_type_0)
    none_type_1 = var_0.copy()
    var_1 = module_0.dataframe_operations(none_type_1)
    module_0.dataframe_operations(none_type_0, threshold=none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    bool_0 = False
    var_0 = module_0.dataframe_operations(
        none_type_0, threshold=none_type_0, column=bool_0
    )
    var_1 = module_0.dataframe_operations(none_type_0, column=none_type_0)
    var_2 = var_0.__reversed__()
    module_0.dataframe_operations(var_2, var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    var_0 = module_1.python_compiler()
    assert var_0 == "GCC 11.4.0"
    var_1 = module_0.dataframe_operations(none_type_0, threshold=var_0, column=var_0)
    var_1.get_group(var_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    var_0 = module_0.dataframe_operations(none_type_0, none_type_0, none_type_0)
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    var_1 = module_0.dataframe_operations(var_0, var_0)
    module_0.dataframe_operations(tuple_0, bool_0, bool_0)
